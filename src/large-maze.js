const mazeMap = [
    "                                                           ",
    '                                                           ',
    '                                                           ',
    '                                                           ',
    '===========================================================',
    '=          =                   =                          =',
    '= ***! *** = ***************** = ************************ =',
    '= *      * = *   *       *   * = *       *              * =',
    '= * ==== * = * = * ===== * = * = * ===== * ============ * =',
    '= *      *   *   * =     * = *   *     = *              * =',
    '= **************** = ***** = ********% = ****$ ********** =',
    '= *                = *     =           =                * =',
    '= * ================ * ============= * ================ * =',
    '= *                  *               *       =          * =',
    '= ***********% ***************************** = ********** =',
    '=    *     *   *   *     *   *   *     *   * = *     *    =',
    '==== * === * = * = * === * = * = * === * = * = * === * ====',
    '     * = = * = * = * = = * = * = * = = * = * = * = = *     ',
    '****** = = * = * = * = = * = * = * = = ! = * = * = = ******',
    '     * = = * = * = * = = * =   = * = =   = * = * = = *     ',
    '==== * === * = * = * === * ===== * === * = * = * === * ====',
    '=    *     * = *   *     *       *     *   *   *     *    =',
    '= ********** = ********& ******************************** =',
    '= *          =       *               *                  * =',
    '= * ================ * ============= * ================ * =',
    '= *                = *         =     * =                * =',
    '= **************** = ********* = ***** = **************** =',
    '= *              * =     *   * = *     = *   *   *      * =',
    '= * ============ * ===== * = * = * ===== * = * = * ==== * =',
    '= *              *       * = !   *       *   * = *      * =',
    '= $ ********************** =   *************** = & ****** =',
    '=                          =                   =          =',
    '===========================================================',
]

// Entire addLevel code

// addLevel([
//     "                                                           ",
//     '                                                           ',
//     '                                                           ',
//     '                                                           ',
//     '===========================================================',
//     '=          =                   =                          =',
//     '= ***! *** = ***************** = ************************ =',
//     '= *      * = *   *       *   * = *       *              * =',
//     '= * ==== * = * = * ===== * = * = * ===== * ============ * =',
//     '= *      *   *   * =     * = *   *     = *              * =',
//     '= **************** = ***** = ********% = ****$ ********** =',
//     '= *                = *     =           =                * =',
//     '= * ================ * ============= * ================ * =',
//     '= *                  *               *       =          * =',
//     '= ***********% ***************************** = ********** =',
//     '=    *     *   *   *     *   *   *     *   * = *     *    =',
//     '==== * ?== * = * = * === * = * = * === * = * = * === * ====',
//     '     * = = * = * = * = = * = * = * = = * = * = * = = *     ',
//     '****** = = * = * = * = = * = * = * = = ! = * = * = = ******',
//     '     * = = * = * = * = = * =   = * = =   = * = * = = *     ',
//     '==== * === * = * = * === * ===== * === * = * = * === * ====',
//     '=    *     * = *   *     *       *     *   *   *     *    =',
//     '= ********** = ********& ******************************** =',
//     '= *          =       *               *                  * =',
//     '= * ================ * ============= * ================ * =',
//     '= *                = *         =     * =                * =',
//     '= **************** = ********* = ***** = **************** =',
//     '= *              * =     *   * = *     = *   *   *      * =',
//     '= * ============ * ===== * = * = * ===== * = * = * ==== * =',
//     '= *              *       * = !   *       *   * = *      * =',
//     '= $ ********************** =   *************** = & ****** =',
//     '=                          =                   =          =',
//     '===========================================================',
// ],{
//     // this will define the size of each tile of the wall
//     tileWidth: 15,
//     tileHeight: 15,
    
//     // this will define each symbol used on the maze map, by a function returning a component list (what will be passed to add())
//     tiles: {
        
//         // wall
//     "=": () => [ //each symbol represents an object
//         sprite("maze-wall"),
//         area(), //for collision detection
//         pos(),
//         scale(1.5),
//         body({ isStatic: true }),
//         "wall", // tag for collision detection
//     ],
//     // dots
//     "*": () => [
//         sprite("pointDot"),
//         pos(),
//         scale(1.5),
//         area(),       
//         "pointDot",  // add tag so behavior can be assigned (on collision)},
//     ],
//     //fruits
//     "!": () => [
//         sprite("apple"),
//         pos(),
//         scale(1.5),
//         area(),       
//         "fruit",  // add tag so behavior can be assigned (on collision)},
//     ],
//     "$": () => [
//         sprite("strawberry"),
//         pos(),
//         scale(1.5),
//         area(),       
//         "fruit",  // add tag so behavior can be assigned (on collision)},
//     ],
//     "&": () => [
//         sprite("cherry"),
//         pos(),
//         scale(1.5),
//         area(),       
//         "fruit",  // add tag so behavior can be assigned (on collision)},
//     ],
//     "%": () => [
//         sprite("yellowFruit"),
//         pos(),
//         scale(1.5),
//         area(),       
//         "fruit",  // add tag so behavior can be assigned (on collision)},
//     ]
// }
// })
